{"version":3,"sources":["webpack:///./src/app/pages/profile/profile-management/profile-management.component.html","webpack:///./src/app/pages/profile/profile-management/profile-management.component.scss","webpack:///./src/app/pages/profile/profile-management/profile-management.component.ts","webpack:///./src/app/pages/profile/profile-routing.module.ts","webpack:///./src/app/pages/profile/profile.module.ts"],"names":[],"mappings":"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","file":"profile-profile-module.js","sourcesContent":["module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-12\\\">\\n        <nb-card>\\n            <nb-card-header class=\\\"text-center\\\">Profile</nb-card-header>\\n            <nb-card-body style=\\\"overflow: visible\\\">\\n                <div class=\\\"row justify-content-center align-items-center\\\">\\n                    <div class=\\\"col-lg-8\\\">\\n                        <!--Reactive Form-->\\n                        <form (ngSubmit)=\\\"updateUserProfile()\\\" [formGroup]=\\\"userForm\\\" aria-labelledby=\\\"title\\\">\\n                            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"userForm.errors\\\">\\n                                {{userForm.errors.message}}\\n                            </div>\\n                            <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"successUserMessage\\\">\\n                                {{successUserMessage}}\\n                            </div>\\n                            <div class=\\\"row full-name-inputs\\\" [formGroup]=\\\"userForm.get('name')\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\"\\n                                            name=\\\"user-first-name\\\" nbInput fullWidth placeholder=\\\"First Name\\\"\\n                                            [(ngModel)]=\\\"user.first_name\\\">\\n\\n                                        <!--Register Error Here-->\\n                                        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                            *ngIf=\\\"get('name').get('firstName').touched && get('name').get('firstName').invalid\\\">\\n                                            FirstName is required\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"text\\\" formControlName=\\\"lastName\\\" name=\\\"user-last-name\\\"\\n                                            class=\\\"form-control\\\" nbInput fullWidth placeholder=\\\"Last Name\\\"\\n                                            [(ngModel)]=\\\"user.last_name\\\">\\n                                        <!--Register Error Here-->\\n                                        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                            *ngIf=\\\"get('name').get('lastName').touched && get('name').get('lastName').invalid\\\">\\n                                            LastName is required\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <!--EMAIL-->\\n                            <div class=\\\"form-group\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" name=\\\"user-email\\\"\\n                                    placeholder=\\\"Email Address\\\" [disabled]=\\\"true\\\" [(ngModel)]=\\\"user.email\\\">\\n                                <!--Register Error Here-->\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                    *ngIf=\\\"get('email').touched && get('email').invalid\\\">\\n                                    <div *ngIf=\\\"get('email').errors.required\\\"> Email is required</div>\\n                                    <div *ngIf=\\\"get('email').errors.pattern\\\">Invalid email address</div>\\n                                </div>\\n                            </div>\\n\\n                            <!--USERNAME-->\\n                            <div class=\\\"form-group\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" name=\\\"username\\\"\\n                                    placeholder=\\\"Username\\\" [(ngModel)]=\\\"user.username\\\">\\n                                <!--Register Error Here-->\\n                                <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                    *ngIf=\\\"get('username').touched && get('username').invalid\\\">\\n                                    <div *ngIf=\\\"get('username').errors.required\\\"> Username is required</div>\\n                                    <div *ngIf=\\\"get('username').errors.minlength\\\">Username should be at least 4\\n                                        character long</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-center mt-3\\\">\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!userForm.valid\\\" class=\\\"btn btn-success\\\">\\n                                    UPDATE\\n                                </button>\\n                            </div>\\n                        </form>\\n\\n                        <!--PASSWORD-->\\n                        <hr class=\\\"my-5\\\">\\n                        <form (ngSubmit)=\\\"changePassword()\\\" [formGroup]=\\\"passwordForm\\\" aria-labelledby=\\\"title\\\">\\n                            <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                *ngIf=\\\"passwordForm.errors && passwordForm.errors.message\\\">\\n                                {{passwordForm.errors.message}}\\n                            </div>\\n                            <div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"successPasswordMessage\\\">\\n                                {{successPasswordMessage}}\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"oldPassword\\\"\\n                                            name=\\\"user-old-password\\\" nbInput fullWidth placeholder=\\\"Old Password\\\"\\n                                            [(ngModel)]=\\\"user.old_password\\\">\\n\\n                                        <!--Register Error Here-->\\n                                        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                            *ngIf=\\\"get_password('oldPassword').touched && get_password('oldPassword').invalid\\\">\\n                                            Old Password is required\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"newPassword\\\"\\n                                            name=\\\"user-new-password\\\" nbInput fullWidth placeholder=\\\"New Password\\\"\\n                                            [(ngModel)]=\\\"user.new_password\\\">\\n\\n                                        <!--Register Error Here-->\\n                                        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                            *ngIf=\\\"get_password('newPassword').touched && get_password('newPassword').invalid\\\">\\n                                            Type at least 8 characters\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-sm-6\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <input type=\\\"password\\\" formControlName=\\\"newPasswordConfirmation\\\"\\n                                            name=\\\"user-new-password-confirmation\\\" class=\\\"form-control\\\" nbInput fullWidth\\n                                            placeholder=\\\"Re-Enter Password\\\"\\n                                            [(ngModel)]=\\\"user.new_password_confirmation\\\">\\n                                        <!--Register Error Here-->\\n                                        <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\"\\n                                            *ngIf=\\\"passwordForm.hasError('notSame')\\\">\\n                                            Passwords do not match\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"text-center mt-2\\\">\\n                                <button type=\\\"submit\\\" [disabled]=\\\"!passwordForm.valid\\\" class=\\\"btn btn-success\\\">\\n                                    UPDATE\\n                                </button>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </nb-card-body>\\n        </nb-card>\\n    </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2ZpbGUvcHJvZmlsZS1tYW5hZ2VtZW50L3Byb2ZpbGUtbWFuYWdlbWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NbAuthService, NbTokenService } from \"@nebular/auth\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { UserService } from \"../../../@core/data/users.service\";\nimport { AuthService } from '../../../auth/auth.service';\nimport * as _ from 'lodash'\n\n@Component({\n  selector: 'ngx-profile-management',\n  templateUrl: './profile-management.component.html',\n  styleUrls: ['./profile-management.component.scss']\n})\nexport class ProfileManagementComponent implements OnInit {\n\n  user = { first_name: '', last_name: '', email: '', username: '', old_password: '', new_password: '', new_password_confirmation: '' };\n  userId;\n  successUserMessage;\n  successPasswordMessage;\n  clients;\n\n  userForm: FormGroup;\n  passwordForm: FormGroup;\n\n  constructor(private userService: UserService,\n    private authService: NbAuthService,\n    private tokenService: NbTokenService,\n    private localAuth: AuthService) { }\n\n  ngOnInit() {\n    this.createForm()\n    this.loadUser()\n  }\n\n  checkPasswords(group: FormGroup) { // here we have the 'passwords' group\n    let pass = group.get('newPassword').value;\n    let confirmPass = group.get('newPasswordConfirmation').value;\n\n    return pass === confirmPass ? null : { notSame: true }\n  }\n\n  createForm() {\n    this.userForm = new FormGroup({\n      name: new FormGroup({\n        firstName: new FormControl('', Validators.required),\n        lastName: new FormControl('', Validators.required)\n      }),\n      email: new FormControl('', [\n        Validators.required,\n        Validators.pattern(\"[^ @]*@[^ @]*\")\n      ]),\n      username: new FormControl('',\n        [Validators.required, Validators.minLength(4)]\n      )\n    });\n\n    this.passwordForm = new FormGroup({\n      oldPassword: new FormControl('', Validators.required),\n      newPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      newPasswordConfirmation: new FormControl('')\n    }, { validators: this.checkPasswords })\n  }\n\n  refreshToken() {\n    this.tokenService.get()\n      .subscribe(curtoken => {\n        this.localAuth.refreshToken(curtoken.getPayload())\n          .subscribe((retval: any) => {\n            let newtoken = retval.token;\n            this.authService.refreshToken('email', newtoken);\n            const token = JSON.parse(localStorage.getItem('auth_app_token'));\n            token.value = newtoken;\n            const tokenString = JSON.stringify(token);\n            localStorage.setItem('auth_app_token', tokenString);\n            this.loadUser()\n          },\n            err => {\n            });\n      });\n  }\n\n  loadUser() {\n    this.tokenService.get()\n      .subscribe(token => {\n        console.log(token);\n        this.userId = token.getPayload()._id\n        console.log(token.getPayload())\n        this.user = { ...this.user, ..._.pick(token.getPayload(), ['first_name', 'last_name', 'email', 'username']) }\n      });\n  }\n\n  updateUserProfile() {\n    const user = {\n      first_name: this.get('name').get('firstName').value,\n      last_name: this.get('name').get('lastName').value,\n      username: this.get('username').value,\n      email: this.get('email').value\n    };\n    this.userService.updateUserProfile(user, this.userId).subscribe(\n      data => {\n        this.successUserMessage = data.message;\n        this.refreshToken()\n      },\n      err => {\n        const { error } = err;\n        this.successUserMessage = ''\n        this.userForm.setErrors({ 'message': error.message });\n      }\n    );\n  }\n\n  changePassword() {\n    const password = {\n      old_password: this.get_password(\"oldPassword\").value,\n      new_password: this.get_password(\"newPassword\").value\n    };\n    this.userService.changePassword(password, this.userId).subscribe(\n      data => {\n        this.successPasswordMessage = data.message;\n        this.refreshToken()\n      },\n      err => {\n        const { error } = err;\n        this.successPasswordMessage = ''\n        this.passwordForm.setErrors({ 'message': error.message });\n      }\n    );\n  }\n\n  // validator function\n  get(controlName) {\n    return this.userForm.get(controlName);\n  }\n\n  // validator function\n  get_password(controlName) {\n    return this.passwordForm.get(controlName);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {ProfileManagementComponent} from './profile-management/profile-management.component';\n\nconst routes: Routes = [\n    {\n        path: 'profile-management',\n        component: ProfileManagementComponent,\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule],\n})\nexport class ProfileRoutingModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\nimport {ProfileRoutingModule} from './profile-routing.module';\nimport {ProfileManagementComponent} from './profile-management/profile-management.component';\nimport {NbCardModule} from '@nebular/theme';\nimport {SmartTableService} from '../../@core/data/smart-table.service';\n\nimport {ThemeModule} from '../../@theme/theme.module';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\n\n@NgModule({\n    declarations: [\n        ProfileManagementComponent\n    ],\n    imports: [\n        CommonModule,\n        ProfileRoutingModule,\n        NbCardModule,\n        ThemeModule,\n        NgxDatatableModule\n    ],\n    providers: [\n        SmartTableService,\n    ],\n})\nexport class ProfileModule {\n}\n"],"sourceRoot":""}